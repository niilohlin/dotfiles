#!/usr/bin/env python

import sys
import argparse


def hard_wrap_text(text, max_length=120):
    """
    This function takes a text and hard-wraps lines longer than the specified max_length.
    """
    wrapped_lines = []  # Store all lines after processing

    lines = text.splitlines()  # Split input text into lines

    for line in lines:
        while len(line) > max_length:
            # Find the position to wrap the text
            wrap_position = line.rfind(" ", 0, max_length)
            if wrap_position == -1:
                # No space found; hard-wrap the text at the max_length
                wrap_position = max_length
            wrapped_lines.append(line[:wrap_position])  # Append the segment to result
            line = line[
                wrap_position:
            ].lstrip()  # Remaining text for further processing

        wrapped_lines.append(line)  # Append any remainder or original short lines

    return "\n".join(wrapped_lines)


def main():
    parser = argparse.ArgumentParser(description="A program to hard-wrap text")
    parser.add_argument(
        "max_length",
        nargs="?",
        type=int,
        default=120,
        help="The max column width for text wrapping (default: 120)",
    )

    args = parser.parse_args()

    # Read entire input from stdin
    input_text = sys.stdin.read()
    # Process the text to hard wrap it
    output_text = hard_wrap_text(input_text, args.max_length)
    # Print the wrapped text
    print(output_text)


if __name__ == "__main__":
    main()
